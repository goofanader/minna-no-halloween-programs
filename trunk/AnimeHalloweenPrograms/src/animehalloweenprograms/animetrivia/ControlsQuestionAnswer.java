/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package animehalloweenprograms.animetrivia;

import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Phyllis
 */
public class ControlsQuestionAnswer extends javax.swing.JPanel {

    /**
     * Creates new form ControlsQuestionAnswer
     */
    public ControlsQuestionAnswer() {
        initComponents();

        triviaControls = null;
        /*stopDisplayingAnswer = new StopDisplayingAnswerTask();
        stopDisplayingQuestion = new StopDisplayingQuestionTask();
        endPauseForAnswer = new EndPauseForAnswerTask();
        stopDisplayingPoints = new StopDisplayingPointsTask();*/

        seconds = INIT_SECONDS;
        isQuestion = true;

        timer = new Timer();
    }

    public void setTriviaControls(TriviaControls aThis) {
        triviaControls = aThis;
    }

    public void beginNewQuestion() {
        //timer = new Timer();
        System.out.println("Beginning new question");
        timer.schedule(new StopDisplayingQuestionTask(), seconds * SECOND_MULTIPLIER);
    }

    private class StopDisplayingQuestionTask extends TimerTask {

        @Override
        public void run() {
            if (isQuestion) {
                timer.purge();
                //timer = new Timer();

                System.out.println("\nTime's up! switching to the answer panel");
                isQuestion = false;

                //show answer panel
                questionAnswerText.setText("Answer");

                timer.schedule(new StopDisplayingAnswerTask(), WAIT_TIME * SECOND_MULTIPLIER);
            }
        }
    }

    private class EndPauseForAnswerTask extends TimerTask {

        @Override
        public void run() {
            timer.purge();
            //timer = new Timer();

            //switch back to question panel unless all players have gone
            timer.schedule(new StopDisplayingQuestionTask(), seconds * SECOND_MULTIPLIER);
        }
    }

    private class StopDisplayingAnswerTask extends TimerTask {

        @Override
        public void run() {
            timer.purge();
            //timer = new Timer();
            // show points panel on board view
            
            System.out.println("Time's up! Dipslaying points panel");
            timer.schedule(new StopDisplayingPointsTask(), WAIT_TIME * SECOND_MULTIPLIER);
        }
    }

    private class StopDisplayingPointsTask extends TimerTask {

        @Override
        public void run() {
            timer.purge();
            //timer = new Timer();
            //switch back to category view
            System.out.println("Time's up! Let's display the categories panel.");
            questionAnswerText.setText("Question");
            triviaControls.switchToCategories();
        }
    }

    public void pauseForAnswer() {
        timer.purge();
        //timer = new Timer();

        //switch to timer to end when the player doesn't respond.
        //visually, reset timer for the player's answer

        timer.schedule(new EndPauseForAnswerTask(), ANSWER_TIME * SECOND_MULTIPLIER);
    }

    public void incorrectAnswer() {
        timer.purge();
        //timer = new Timer();

        //switch to question view with a renewed timer
        timer.schedule(new StopDisplayingQuestionTask(), seconds * SECOND_MULTIPLIER);
    }

    public void correctAnswer() {
        timer.purge();
        //timer = new Timer();

        //switch to answer view

        timer.schedule(new StopDisplayingAnswerTask(), WAIT_TIME * SECOND_MULTIPLIER);
    }
    
    public void stopTimers() {
        timer.purge();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        questionAnswerText = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionTextArea = new javax.swing.JTextArea();

        questionAnswerText.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        questionAnswerText.setForeground(new java.awt.Color(102, 102, 102));
        questionAnswerText.setText("Question");

        questionTextArea.setEditable(false);
        questionTextArea.setColumns(20);
        questionTextArea.setForeground(new java.awt.Color(51, 51, 51));
        questionTextArea.setRows(5);
        jScrollPane2.setViewportView(questionTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(questionAnswerText, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(questionAnswerText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel questionAnswerText;
    private javax.swing.JTextArea questionTextArea;
    // End of variables declaration//GEN-END:variables
    private Timer timer;
    private int seconds;
    private boolean isQuestion;
    private TriviaControls triviaControls;
    
    //TimerTask stopDisplayingAnswer, stopDisplayingQuestion, endPauseForAnswer, stopDisplayingPoints;
    private static final int INIT_SECONDS = 5;
    private static final int WAIT_TIME = 3;
    private static final int ANSWER_TIME = 5;
    private static final int SECOND_MULTIPLIER = 1000;
}
