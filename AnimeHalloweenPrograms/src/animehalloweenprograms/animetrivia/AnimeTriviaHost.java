/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package animehalloweenprograms.animetrivia;

import java.awt.BorderLayout;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

/**
 *
 * @author Phyllis
 */
public class AnimeTriviaHost extends javax.swing.JFrame implements WindowListener {

    /**
     * Creates new form AnimeTriviaAudience
     */
    public AnimeTriviaHost() {
        initComponents();

        isPlayingGame = isPausedGame = false;
        board = null;

        triviaControls = new TriviaControls();
        triviaQuestions = new TriviaQuestions();
        triviaPlayers = new TriviaPlayers();

        controllerView.setLayout(new BorderLayout());
        controllerView.add(triviaControls, BorderLayout.CENTER);

        addWindowListener(this);
    }

    public void setAnimeBoard(AnimeTriviaGameBoard board) {
        this.board = board;
    }

    public void windowClosed(WindowEvent e) {
        board.endDisplay();
        //System.exit(0);
        //This will only be seen on standard output.
        //displayMessage("WindowListener method called: windowClosed.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlsToggleButton = new javax.swing.JToggleButton();
        questionsToggleButton = new javax.swing.JToggleButton();
        playersToggleButton = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        playPauseButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        controllerView = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Anime Trivia");
        setMinimumSize(new java.awt.Dimension(600, 500));

        controlsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/controls.png"))); // NOI18N
        controlsToggleButton.setSelected(true);
        controlsToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlsToggleButtonActionPerformed(evt);
            }
        });

        questionsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/questionsOff.png"))); // NOI18N
        questionsToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionsToggleButtonActionPerformed(evt);
            }
        });

        playersToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/playersOff.png"))); // NOI18N
        playersToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playersToggleButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Timer Here");

        playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/Play.png"))); // NOI18N
        playPauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playPauseButtonActionPerformed(evt);
            }
        });

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/Stop.png"))); // NOI18N
        stopButton.setBorder(null);
        stopButton.setBorderPainted(false);
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        controllerView.setAutoscrolls(true);
        controllerView.setPreferredSize(new java.awt.Dimension(500, 641));

        javax.swing.GroupLayout controllerViewLayout = new javax.swing.GroupLayout(controllerView);
        controllerView.setLayout(controllerViewLayout);
        controllerViewLayout.setHorizontalGroup(
            controllerViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        controllerViewLayout.setVerticalGroup(
            controllerViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        jMenu1.setText("File");

        jMenuItem3.setText("New");
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Open...");
        jMenu1.add(jMenuItem4);

        jMenu4.setText("Open Recent");
        jMenu1.add(jMenu4);
        jMenu1.add(jSeparator1);

        jMenuItem5.setText("Close");
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Save");
        jMenu1.add(jMenuItem6);

        jMenuItem7.setText("Save As...");
        jMenu1.add(jMenuItem7);

        jMenuItem8.setText("Revert");
        jMenuItem8.setEnabled(false);
        jMenu1.add(jMenuItem8);
        jMenu1.add(jSeparator2);

        jMenuItem9.setText("Page Setup...");
        jMenu1.add(jMenuItem9);

        jMenuItem10.setText("Print...");
        jMenu1.add(jMenuItem10);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Anime Eyes");

        jMenuItem1.setText("New Anime Eyes");
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Open Anime Eyes");
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlsToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questionsToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playersToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playPauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(controllerView, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(playPauseButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(questionsToggleButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controlsToggleButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playersToggleButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stopButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(controllerView, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void controlsToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlsToggleButtonActionPerformed
        setToggleButtonsFalse(0);
        //if clicked on, switch to controls panel
        //if (!controlsToggleButton.isSelected()) {
        controlsToggleButton.setSelected(true);
        controlsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/controls.png")));

        removeAllComponents();
        triviaControls.setVisible(true);
        controllerView.add(triviaControls, BorderLayout.CENTER);
        //}
    }//GEN-LAST:event_controlsToggleButtonActionPerformed

    private void questionsToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionsToggleButtonActionPerformed
        setToggleButtonsFalse(1);
        //if clicked on, switch to controls panel
        //if (!questionsToggleButton.isSelected()) {
        questionsToggleButton.setSelected(true);
        questionsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/questions.png")));
        //controllerView = questionsPanel;
        //}
        
        removeAllComponents();
        triviaQuestions.setVisible(true);
        controllerView.add(triviaQuestions, BorderLayout.CENTER);
    }//GEN-LAST:event_questionsToggleButtonActionPerformed

    private void playersToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playersToggleButtonActionPerformed
        setToggleButtonsFalse(2);
        //if clicked on, switch to controls panel
        //if (!playersToggleButton.isSelected()) {
        playersToggleButton.setSelected(true);
        playersToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/players.png")));

        removeAllComponents();
        triviaPlayers.setVisible(true);
        controllerView.add(triviaPlayers, BorderLayout.CENTER);
        //}
    }//GEN-LAST:event_playersToggleButtonActionPerformed

    private void removeAllComponents() {
        for (int i = 0; i < controllerView.getComponentCount(); i++) {
            controllerView.getComponent(i).setVisible(false);
            controllerView.remove(controllerView.getComponent(i));
        }
    }

    private void playPauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playPauseButtonActionPerformed
        if (!isPlayingGame) {
            stopButton.setEnabled(true);
            playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/Pause.png")));
            isPlayingGame = true;

            triviaControls.startPlayingGame();
        } else if (isPausedGame) {
            isPausedGame = false;
            playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/Pause.png")));
        } else if (!isPausedGame) {
            isPausedGame = true;
            playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/Play.png")));
        }
    }//GEN-LAST:event_playPauseButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        if (isPlayingGame) {
            stopButton.setEnabled(false);
            isPlayingGame = false;
            isPausedGame = false;
            playPauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/Play.png")));

            triviaControls.stopPlayingGame();
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    private void setToggleButtonsFalse(int ignore) {
        if (ignore == 0) {
            playersToggleButton.setSelected(false);
            playersToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/playersOff.png")));
            questionsToggleButton.setSelected(false);
            questionsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/questionsOff.png")));
        } else if (ignore == 1) {
            controlsToggleButton.setSelected(false);
            controlsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/controlsOff.png")));
            playersToggleButton.setSelected(false);
            playersToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/playersOff.png")));
        } else {
            controlsToggleButton.setSelected(false);
            controlsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/controlsOff.png")));
            questionsToggleButton.setSelected(false);
            questionsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animehalloweenprograms/images/questionsOff.png")));
        }
    }
    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    /*try {
     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
     if ("Nimbus".equals(info.getName())) {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
     }
     }
     } catch (ClassNotFoundException ex) {
     java.util.logging.Logger.getLogger(AnimeTriviaHost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (InstantiationException ex) {
     java.util.logging.Logger.getLogger(AnimeTriviaHost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (IllegalAccessException ex) {
     java.util.logging.Logger.getLogger(AnimeTriviaHost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
     java.util.logging.Logger.getLogger(AnimeTriviaHost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     }*/
    //</editor-fold>

    /* Create and display the form */
    /*java.awt.EventQueue.invokeLater(new Runnable() {
     public void run() {
     new AnimeTriviaHost().setVisible(true);
     }
     });
     }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controllerView;
    private javax.swing.JToggleButton controlsToggleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JButton playPauseButton;
    private javax.swing.JToggleButton playersToggleButton;
    private javax.swing.JToggleButton questionsToggleButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
    private TriviaControls triviaControls;
    private TriviaQuestions triviaQuestions;
    private TriviaPlayers triviaPlayers;
    private boolean isPlayingGame, isPausedGame;
    private AnimeTriviaGameBoard board;

    @Override
    public void windowOpened(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void windowClosing(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void windowIconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void windowActivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
}
